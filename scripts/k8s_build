#!/bin/bash

DEBUG_IDENTIFICATOR="[ \033[32m DEBUG \033[0m ]"
VERSION=$(cat VERSION)

echo -e "$DEBUG_IDENTIFICATOR Start k8s building script for soft version - $VERSION"

echo -e "$DEBUG_IDENTIFICATOR Preparing system parameters"

ROOT_PATH=$(git rev-parse --show-toplevel)
SCRIPTS_PATH=${ROOT_PATH}/scripts
DEPLOYMENT_PATH=${ROOT_PATH}/deployments

echo -e "$DEBUG_IDENTIFICATOR Reading parameters for docker_build script"

while [ -n "$1" ]
do
case "$1" in
-client_examples_numbers) TYPE="$2" 
echo "Found the -type option, with parameter value $TYPE" 
shift ;;
--) shift
break ;;
*) echo "$1 is not an option";;
esac
shift
done

echo -e "$DEBUG_IDENTIFICATOR Start cluster in minikube"

minikube start

echo -e "$DEBUG_IDENTIFICATOR Create namespace dronewebservice in minikube"

kubectl create namespace dronewebservice

echo -e "$DEBUG_IDENTIFICATOR Get info about cluster"

kubectl cluster-info

echo -e "$DEBUG_IDENTIFICATOR Set namespace=dronewebservice in current context"

kubectl config set-context --current --namespace=dronewebservice

echo -e "$DEBUG_IDENTIFICATOR Build docker images"

eval $(minikube docker-env)

${SCRIPTS_PATH}/docker_build -type droneclient

${SCRIPTS_PATH}/docker_build -type dronewebservice

echo -e "$DEBUG_IDENTIFICATOR View config of cluster"

kubectl config view

echo -e "$DEBUG_IDENTIFICATOR Open ports in firewall"

$ROOT_PATH/config/scripts/iptables_setup

echo -e "$DEBUG_IDENTIFICATOR Apply dronewebservice deployments"

kubectl apply -f ${DEPLOYMENT_PATH}/dronewebservice/deployment/deployment.yaml

echo -e "$DEBUG_IDENTIFICATOR Current deployments"

kubectl get deployments

echo -e "$DEBUG_IDENTIFICATOR Apply dronewebservice services"

kubectl apply -f ${DEPLOYMENT_PATH}/dronewebservice/service/service.yaml

echo -e "$DEBUG_IDENTIFICATOR Current services"

kubectl get services

echo -e "$DEBUG_IDENTIFICATOR Started containers"

kubectl get pods -o json | jq '.items[].metadata.name'

echo -e "$DEBUG_IDENTIFICATOR Get IPs of MINIKUBE, CLUSTER and NODE_PORT"

MINIKUBE_IP=$(minikube ip)
CLUSTER_IP=$(kubectl get service dronewebservice-src -o jsonpath="{.spec.clusterIP}")
NODE_PORT=$(kubectl get service dronewebservice-src -o jsonpath="{.spec.ports[0].nodePort}")

echo -e "$DEBUG_IDENTIFICATOR Test curl request for start_page"

curl http://$MINIKUBE_IP:$NODE_PORT/

echo -e "$DEBUG_IDENTIFICATOR End k8s building script"