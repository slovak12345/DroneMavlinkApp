#!/bin/bash

DEBUG_IDENTIFICATOR="[ \033[32m DEBUG \033[0m ]"
VERSION=$(cat VERSION)

echo -e "$DEBUG_IDENTIFICATOR Start k8s data config generation script"

echo -e "$DEBUG_IDENTIFICATOR Preparing system parameters"

ROOT_PATH=$(git rev-parse --show-toplevel)
KUBE_PATH=${ROOT_PATH}/scripts/kube
SCRIPTS_PATH=${ROOT_PATH}/scripts
KUBE_CONFIG_PATH=${ROOT_PATH}/config/kube

cd $SCRIPTS_PATH

mkdir kube

cd $KUBE_PATH

cp ${KUBE_CONFIG_PATH}/config $KUBE_PATH

echo -e "$DEBUG_IDENTIFICATOR Generate ssl-files"

# Generate a ca cert
openssl genpkey -algorithm RSA -out ca-key.pem

openssl req -x509 -new -nodes -key ca-key.pem -sha256 -days 365 -out ca-cert.pem -subj "/C=US/ST=California/L=San Francisco/O=My Organization/CN=client.example.com"

for i in {1..5}
do
# Generate a private key
    mkdir $KUBE_PATH/$i
    
    cd $KUBE_PATH/$i
    
    openssl genpkey -algorithm RSA -out client-key.pem

    openssl req -new -key client-key.pem -out client-csr.pem -subj "/C=US/ST=California/L=San Francisco/O=My Organization/CN=client.example.com"

    openssl x509 -req -in client-csr.pem -CA $KUBE_PATH/ca-cert.pem -CAkey $KUBE_PATH/ca-key.pem -CAcreateserial -out client-cert.pem

    ls $KUBE_PATH/config

    echo "- name: user-number-$i" >> $KUBE_PATH/config

    echo "  user:" >> $KUBE_PATH/config

    echo "   client-certificate: $i/client-csr.pem" >> $KUBE_PATH/config

    echo "   client-key: $i/client-key.pem" >> $KUBE_PATH/config

done

cd $ROOT_PATH

echo -e "$DEBUG_IDENTIFICATOR End k8s data config generation script"